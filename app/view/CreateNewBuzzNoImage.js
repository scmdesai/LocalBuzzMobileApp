/*
 * File: app/view/CreateNewBuzzNoImage.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LocalBuzzMerchantDemo.view.CreateNewBuzzNoImage', {
	extend: 'Ext.form.Panel',
	alias: 'widget.CreateNewBuzzNoImage',

	requires: [
		'Ext.field.DatePicker',
		'Ext.picker.Date',
		'Ext.Button',
		'Ext.field.TextArea',
		'Ext.Spacer'
	],

	config: {
		html: '',
		id: 'formpanel5',
		itemId: 'formpanel',
		padding: '0 0 35 0',
		style: 'background:white',
		ui: 'light',
		autoDestroy: false,
		modal: true,
		scrollable: true,
		multipartDetection: false,
		layout: {
			type: 'vbox',
			align: 'stretchmax'
		},
		items: [
			{
				xtype: 'textfield',
				cls: 'customfield',
				height: '10vh',
				hidden: false,
				id: 'businessName15',
				itemId: 'businessName',
				margin: '5 5 5 5 ',
				padding: '0 0 5 5',
				styleHtmlContent: true,
				label: 'Name',
				labelWidth: '35%',
				labelWrap: true,
				name: 'DealName'
			},
			{
				xtype: 'textfield',
				cls: 'customfield',
				height: '15%',
				hidden: true,
				id: 'businessName16',
				itemId: 'businessName1',
				margin: '30 15 2 15',
				styleHtmlContent: true,
				name: 'businessName'
			},
			{
				xtype: 'textfield',
				hidden: true,
				id: 'customerId4',
				itemId: 'customerId',
				name: 'customerId'
			},
			{
				xtype: 'selectfield',
				cls: 'customfield',
				height: '10vh',
				id: 'DealStatus4',
				itemId: 'DealStatus',
				margin: '0 5 5 5 ',
				maxHeight: '',
				padding: '5 0 0 10',
				style: '',
				styleHtmlContent: true,
				label: 'Status',
				labelWidth: '35%',
				labelWrap: true,
				name: 'DealStatus',
				value: 'Active',
				placeHolder: 'Active',
				autoSelect: false,
				options: [
					{
						text: 'Active',
						value: 'Active'
					},
					{
						text: 'Expired',
						value: 'Expired'
					}
				]
			},
			{
				xtype: 'datepickerfield',
				cls: [
					'customfield',
					'x-field-select'
				],
				height: '10vh',
				id: 'DealStartDate4',
				itemId: 'DealStartDate',
				margin: '0 5 5 5 ',
				padding: '5 0 5 5',
				styleHtmlContent: true,
				width: '97%',
				label: 'Start Date',
				labelWidth: '35%',
				labelWrap: true,
				name: 'DealStartDate',
				value: {
					day: new Date().getDate(),
					month: (new Date().getMonth()+1),
					year: new Date().getFullYear()
				},
				placeHolder: 'mm/dd/yyyy',
				autoSelect: false,
				usePicker: true,
				component: {
					useMask: true,
					minValue: new Date()
				},
				dateFormat: 'm/d/Y',
				picker: {
					id: 'startDatepicker1',
					itemId: 'mydatepicker3',
					style: '',
					scrollable: false,
					stretchX: false,
					stretchY: false,
					useTitles: true,
					value: {
						year: 2016,
						month: 7,
						day: 16
					},
					yearFrom: 2016,
					yearTo: 2017
				}
			},
			{
				xtype: 'datepickerfield',
				cls: [
					'customfield',
					'x-field-select'
				],
				height: '10vh',
				id: 'DealEndDate4',
				itemId: 'DealEndDate',
				margin: '0 5 5 5 ',
				padding: '5 0 5 5',
				styleHtmlContent: true,
				width: '97%',
				label: 'End Date',
				labelWidth: '35%',
				name: 'DealEndDate',
				value: {
					day: new Date().getDate()+1,
					month: (new Date().getMonth()+1),
					year: new Date().getFullYear()
				},
				placeHolder: 'mm/dd/yyyy',
				options: {
					minValue: new Date()
				},
				usePicker: true,
				component: {
					useMask: true
				},
				picker: {
					itemId: 'mydatepicker3',
					useTitles: true,
					yearFrom: 2016,
					yearTo: 2017
				}
			},
			{
				xtype: 'textfield',
				hidden: true,
				id: 'DealPictureURL3',
				itemId: 'DealPictureURL',
				name: 'DealPictureURL'
			},
			{
				xtype: 'textfield',
				hidden: true,
				id: 'DealPictureURL4',
				itemId: 'DealPictureURL1',
				name: 'DealImageURL'
			},
			{
				xtype: 'textareafield',
				cls: 'customfield',
				height: '100%',
				id: 'DealDescription3',
				itemId: 'DealDescription',
				margin: '0 5 5 5 ',
				style: 'border:1px solid #C0C0C0!important',
				styleHtmlContent: true,
				width: '',
				clearIcon: false,
				label: 'Description',
				labelWidth: '35%',
				name: 'DealDescription'
			},
			{
				xtype: 'textfield',
				cls: 'customfield',
				height: '15%',
				hidden: true,
				id: 'businessName17',
				itemId: 'businessName2',
				margin: '30 15 2 15',
				styleHtmlContent: true,
				name: 'city'
			},
			{
				xtype: 'textfield',
				cls: 'customfield',
				height: '15%',
				hidden: true,
				id: 'businessName19',
				itemId: 'businessName3',
				margin: '30 15 2 15',
				styleHtmlContent: true,
				name: 'state'
			},
			{
				xtype: 'container',
				left: '',
				margin: '0 5 5 5 ',
				layout: 'hbox',
				items: [
					{
						xtype: 'container',
						docked: 'left',
						html: '<input type="checkbox" name="chkbx" id="chkbx">',
						left: '40%',
						margin: '5 5 5 15',
						top: '50%'
					},
					{
						xtype: 'container',
						docked: 'right',
						height: '40px',
						html: '<a id="terms" style="font-size:2.5vw;" > I agree to Apps On Mobile LLC\'s Terms & Conditions</a>',
						itemId: 'mycontainer5',
						margin: '5 5 5 0',
						padding: '5 30 5 0',
						styleHtmlContent: true,
						layout: 'hbox',
						listeners: [
							{
								fn: function(element, eOpts) {
									element.addListener('tap',function(){
										//Ext.Viewport.add({xtype:'Terms'}).show();
										var url = "http://www.appsonmobile.com/index.php/terms-and-conditions/";
										window.open(url, '_system', 'location=yes');
									});
								},
								event: 'painted'
							}
						]
					}
				]
			},
			{
				xtype: 'container',
				height: 140,
				margin: '0 10 50 10',
				padding: '5 5 5 5',
				styleHtmlContent: true,
				layout: 'fit',
				scrollable: false,
				items: [
					{
						xtype: 'spacer',
						maxWidth: '',
						minWidth: ''
					},
					{
						xtype: 'button',
						handler: function(button, e) {

							Ext.Viewport.getActiveItem().destroy();
							var store = Ext.getStore('MyDealsStore');
							store.load();
							if(store.getCount()>=5){
								Ext.getCmp('UploadDeal').disable();

							}
							else {
								Ext.getCmp('UploadDeal').enable();
							}
						},
						height: '7vh',
						margin: '0 0 5 0',
						style: 'font-size:5vw!important',
						ui: 'decline',
						width: '40%',
						text: 'Cancel'
					},
					{
						xtype: 'button',
						handler: function(button, e) {



							var form = this.up('CreateNewBuzzNoImage');

							var date = new Date();

							//var dealName = form.getAt(0).getValue();

							var startDate = form.getAt(4).getValue();

							var endDate = form.getAt(5).getValue();


							var dealName = form.getAt(0).getValue();

							if(dealName){


								if(endDate >= date){
									if(endDate >= startDate){
										if(document.getElementById('chkbx').checked){

											form.submit({
												url: 'http://services.appsonmobile.com/democreateNewBuzzNoImage',
												cache: false,
												waitMsg : 'Please Wait...',
												success: function(form,action){

													Ext.Msg.alert('Success',action.msg);
													var store = Ext.getStore('MyDealsStore');
													store.load();

													var count = store.getCount()+1;
													console.log('Count is:' + count);
													if(count > 4){
														console.log('Disabling btn');
														Ext.getCmp('UploadDeal').disable();

													}
													else {
														Ext.getCmp('UploadDeal').enable();
													}

													form.destroy();

												},
												failure: function(form,action) {
													Ext.Msg.alert('Oops.....!Something went wrong','Please check your internet connection or try again later',null,null);
													var store = Ext.getStore('MyDealsStore');
													store.load();
													console.log('Count is:' + count);
													if(store.getCount()>=5){
														Ext.getCmp('UploadDeal').disable();

													}
													else {
														Ext.getCmp('UploadDeal').enable();
													}
													form.destroy();

												}


											});


										}
										else{
											Ext.Msg.alert(null,'You must agree to Terms & Conditions',null,null);
										}
									}
									else
									{
										Ext.Msg.alert('Error!','Buzz start date cannot be after end date',null,null);
									}
								}
								else
								{
									Ext.Msg.alert('Error!','Buzz end date error ',null,null);
								}
							}


							else {

								Ext.Msg.alert('Error!','Buzz name field is empty',null,null);

							}

						},
						docked: 'right',
						height: '7vh',
						itemId: 'submit',
						margin: '0 0 5 0',
						style: 'font-size:5vw!important',
						ui: 'confirm',
						width: '30%',
						text: 'Submit'
					}
				]
			}
		],
		listeners: [
			{
				fn: 'onMydatepicker3Pick',
				event: 'pick',
				delegate: '#mydatepicker3'
			}
		]
	},

	onMydatepicker3Pick: function(picker, value, slot, eOpts) {
		var today = new Date();
		if(value < today){
			picker.setValue(today);
		}
	},

	getValidationErrors: function() {
		var errors = [];
		        var reqFields = this.query('field[required=true]');
		        var i = 0, ln = reqFields.length, field;
		        for (; i < ln; i++) {
		            field = reqFields[i];
		            if (!field.getValue()) {
		                errors.push(field.getLabel() + ' must be completed.');
		            }
		        }
		        console.dir(errors);
		        return errors;
	}

});