/*
 * File: app/view/contactinfo.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LocalBuzzMerchantDemo.view.contactinfo', {
	extend: 'Ext.form.Panel',
	alias: 'widget.contactinfo',

	requires: [
		'Ext.Toolbar',
		'Ext.Spacer',
		'Ext.Button',
		'Ext.field.TextArea',
		'Ext.Menu'
	],

	config: {
		border: 5,
		id: 'info',
		itemId: 'info',
		style: 'background;#fff',
		styleHtmlContent: true,
		modal: true,
		scrollable: false,
		layout: {
			type: 'vbox',
			align: 'stretchmax'
		},
		items: [
			{
				xtype: 'toolbar',
				cls: 'toolbarCls',
				docked: 'top',
				ui: 'plain',
				items: [
					{
						xtype: 'component',
						cls: 'contact-name',
						disabled: true,
						html: '<b>First Name</b>',
						id: 'nameTxt',
						itemId: 'nameTxt'
					},
					{
						xtype: 'spacer',
						height: 11,
						width: 18
					},
					{
						xtype: 'button',
						docked: 'right',
						itemId: 'mybutton10',
						style: 'color:#00529D',
						ui: 'plain',
						iconCls: 'icon-menu'
					}
				]
			},
			{
				xtype: 'component',
				cls: 'contact-name',
				disabled: true,
				docked: 'top',
				height: '40vh',
				id: 'storeImage',
				itemId: 'storeImage'
			},
			{
				xtype: 'textareafield',
				cls: [
					'icon-location1',
					'customfield1'
				],
				disabled: false,
				docked: 'bottom',
				height: '12vh',
				hidden: false,
				html: '',
				itemId: 'address',
				margin: '0 5 0 5',
				maxHeight: '',
				minHeight: '',
				padding: '10 0 5 10',
				style: 'font-size:3.5vw;',
				styleHtmlContent: true,
				clearIcon: false,
				name: 'address',
				placeHolder: 'Not Listed',
				readOnly: true,
				maxRows: 2
			},
			{
				xtype: 'textfield',
				cls: [
					'icon-globe1',
					'customfield2'
				],
				disabled: false,
				docked: 'bottom',
				height: '1vh',
				hidden: false,
				itemId: 'websiteDisplayName',
				margin: '0 5 0 5',
				padding: '0 0 5 15',
				style: 'font-size:5vw;font-family: arial',
				styleHtmlContent: true,
				width: '95%',
				clearIcon: false,
				name: 'websiteDisplayName',
				placeHolder: 'Not Listed',
				readOnly: true
			},
			{
				xtype: 'textfield',
				cls: [
					'icon-email1',
					'customfield2'
				],
				disabled: false,
				docked: 'bottom',
				height: '1vh',
				hidden: false,
				itemId: 'email',
				margin: '0 5 0 5',
				padding: '0 0 5 5',
				style: 'font-size:5vw;font-family: arial',
				styleHtmlContent: true,
				width: '95%',
				clearIcon: false,
				label: '',
				name: 'emailAddress',
				placeHolder: 'Not Listed',
				readOnly: true
			},
			{
				xtype: 'textfield',
				cls: [
					'icon-email1',
					'customfield2'
				],
				disabled: false,
				docked: 'bottom',
				height: '1vh',
				hidden: true,
				itemId: 'email1',
				margin: '0 5 0 5',
				padding: '0 0 5 5',
				style: 'font-size:5vw;font-family: arial',
				styleHtmlContent: true,
				width: '95%',
				clearIcon: false,
				label: '',
				name: 'loginEmail',
				placeHolder: 'Not Listed',
				readOnly: true
			},
			{
				xtype: 'textfield',
				cls: [
					'icon-phone1',
					'customfield2'
				],
				disabled: false,
				docked: 'bottom',
				height: '1vh',
				hidden: false,
				id: 'phoneNumber2',
				itemId: 'phoneNumber',
				margin: '0 5 0 5',
				padding: '0 0 5 5',
				style: 'font-size:4.5vw;font-family: arial;',
				styleHtmlContent: true,
				width: '95%',
				clearIcon: false,
				name: 'phoneNumber',
				placeHolder: 'Not Listed',
				readOnly: true
			},
			{
				xtype: 'textfield',
				disabled: false,
				height: '',
				hidden: true,
				itemId: 'phoneNumber1',
				margin: '',
				minWidth: '',
				padding: '10 10 10 10',
				clearIcon: false,
				name: 'city',
				placeHolder: 'Not Listed',
				readOnly: true
			},
			{
				xtype: 'textfield',
				disabled: false,
				height: '',
				hidden: true,
				itemId: 'phoneNumber2',
				margin: '',
				minWidth: '',
				padding: '10 10 10 10',
				clearIcon: false,
				name: 'state',
				readOnly: true
			},
			{
				xtype: 'textfield',
				disabled: false,
				height: '',
				hidden: true,
				itemId: 'phoneNumber3',
				margin: '',
				minWidth: '',
				padding: '10 10 10 10',
				clearIcon: false,
				name: 'zipcode',
				readOnly: true
			},
			{
				xtype: 'textfield',
				disabled: false,
				height: '',
				hidden: true,
				itemId: 'phoneNumber4',
				margin: '',
				minWidth: '',
				padding: '10 10 10 10',
				clearIcon: false,
				name: 'pictureURL',
				readOnly: true
			},
			{
				xtype: 'textfield',
				disabled: false,
				height: '',
				hidden: true,
				itemId: 'phoneNumber5',
				margin: '',
				minWidth: '',
				padding: '10 10 10 10',
				clearIcon: false,
				name: 'customerId',
				readOnly: true
			},
			{
				xtype: 'textfield',
				disabled: false,
				height: '',
				hidden: true,
				itemId: 'phoneNumber6',
				margin: '',
				minWidth: '',
				padding: '10 10 10 10',
				clearIcon: false,
				name: 'category',
				readOnly: true
			},
			{
				xtype: 'textfield',
				disabled: false,
				height: '',
				hidden: true,
				itemId: 'phoneNumber7',
				margin: '',
				minWidth: '',
				padding: '10 10 10 10',
				clearIcon: false,
				name: 'businessName',
				readOnly: true
			},
			{
				xtype: 'button',
				hidden: true,
				itemId: 'editButton',
				margin: '5 5 5 5',
				style: 'color:#00529D;font-size:6vw;',
				styleHtmlContent: true,
				ui: 'plain',
				iconCls: 'compose'
			}
		],
		listeners: [
			{
				fn: 'onMybutton10Tap',
				event: 'tap',
				delegate: '#mybutton10'
			},
			{
				fn: 'onInfoPainted',
				event: 'painted'
			}
		]
	},

	onMybutton10Tap: function(button, e, eOpts) {


		if(Ext.getCmp('menu').isHidden())

		Ext.Viewport.showMenu('right');
		else
		Ext.Viewport.hideMenu('right');




	},

	onInfoPainted: function(element, eOpts) {

		var storeUserDetails = Ext.getStore('UserDetails');
		storeUserDetails.load();
		var customerId;
		var businessName;
		var date = new Date();

		var today = Ext.Date.format(date, 'n/j/Y');

		storeUserDetails.each(function(record){
			//console.log('StoreUserDetails : ' +record.get('customerId'));
			customerId = record.get('customerId');
			businessName = record.get('businessName');

		});

		var record = Ext.getStore('MyJsonPStore').findRecord('customerId',customerId);

		this.setRecord(record);
	},

	setRecord: function(record) {

		this.callParent(arguments);

		console.log('Set Record of info page');


		if (record) {


			var name = record.get('businessName');



			var customerId = record.get('customerId');

			this.down('#nameTxt').setHtml(name);

			//this.down('contactpic').setData(record.data);

		this.down('#storeImage').setHtml('<img src = "'+record.get('pictureURL')+'" style="height:40vh;width:95%;margin-left:5px;margin-top:2px;"/>');














		}





	},

	initialize: function() {
		this.callParent();
		var menu = Ext.create('Ext.Menu', {
			id:'menu',
		     items: [
		         {

		             iconCls: 'icon-edit',
					 handler: function(){

						Ext.Viewport.hideMenu('right');
						var storeUserDetails = Ext.getStore('UserDetails');
						storeUserDetails.load();
						var customerId;
						var businessName;

						storeUserDetails.each(function(record){
						console.log('StoreUserDetails : ' +record.get('customerId'));
						customerId = record.get('customerId');
						businessName = record.get('businessName');

						});



						var form = Ext.Viewport.add({xtype:'contactform'});

						var record = Ext.getStore('MyJsonPStore').findRecord('customerId',customerId,0,true,false,false);

						Ext.Viewport.setActiveItem(form);
						form.setRecord(record);
				 }

		         },
		         {

		             iconCls: 'icon-signout',
					 handler: function(){
						 Ext.Viewport.hideMenu('right');
						 Ext.Msg.confirm('Logout','Are you sure you want to logout?',function(btn){
						if (btn == 'yes'){


							FacebookInAppBrowser.logout(function(){
								window.localStorage.setItem('facebookAccessToken',null) ;
								location.reload();
								//navigator.app.exitApp();

							});
						}
						});
					 }
		         }
		     ]

		 });

		 Ext.Viewport.setMenu(menu, {
		     side: 'right',
		     reveal: true,

		 });
	}

});