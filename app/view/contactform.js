/*
 * File: app/view/contactform.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LocalBuzzMerchantDemo.view.contactform', {
	extend: 'Ext.form.Panel',
	alias: 'widget.contactform',

	requires: [
		'Ext.Toolbar',
		'Ext.Button',
		'Ext.Spacer',
		'Ext.field.TextArea'
	],

	config: {
		html: '',
		id: 'formpanel',
		itemId: 'formpanel',
		style: 'background:white',
		ui: 'light',
		autoDestroy: false,
		modal: true,
		scrollable: false,
		multipartDetection: false,
		layout: {
			type: 'vbox',
			align: 'stretchmax'
		},
		items: [
			{
				xtype: 'toolbar',
				cls: 'toolbarCls',
				docked: 'top',
				height: '12vh',
				style: 'border-top:none',
				ui: 'plain',
				autoDestroy: false,
				items: [
					{
						xtype: 'button',
						height: '8vh',
						itemId: 'cancelButton',
						margin: '10 0 10 10',
						ui: 'decline',
						width: '30%',
						text: 'Cancel'
					},
					{
						xtype: 'spacer'
					},
					{
						xtype: 'button',
						handler: function(button, e) {



							var form = this.up('contactform');

							var store = Ext.getStore('MyJsonPStore');
							var record = form.getRecord();
							var customerId = form.getRecord().get('customerId');
							/*record.beginEdit(true, record.getChanges());
							form.updateRecord(record);
							record.endEdit(true, record.getChanges());
							record.commit();
							store.sync();
							store.load();*/








							form.submit({
								url: 'http://services.appsonmobile.com/demoUpdateStoreInfo/' + customerId,
								success: function(form, action) {

									Ext.Msg.alert('Record updated', "Please login again to see the changes",null,null);

									store.sync();
									store.load();

									form.destroy();








								},
								failure: function(form,action) {

									store.load();
									Ext.Msg.alert('Oops.....!Something went wrong','Please check your internet connection or try again later',null,null);

									form.destroy();




								}

							});




						},
						cls: 'button',
						height: '8vh',
						itemId: 'saveContactButton',
						margin: '10 10 10 0',
						ui: 'confirm',
						width: '30%',
						text: 'Save'
					}
				]
			},
			{
				xtype: 'button',
				handler: function(button, e) {
					var storeUserDetails = Ext.getStore('UserDetails');
					storeUserDetails.load();
					var customerId;
					var businessName;

					storeUserDetails.each(function(record){
						console.log('StoreUserDetails : ' +record.get('customerId'));
						customerId = record.get('customerId');
						businessName = record.get('businessName');

					});




					var view = Ext.Viewport.add({xtype: 'ChangeContactPicForm'});





					var record = Ext.getStore('MyJsonPStore').findRecord('customerId',customerId,0,true,false,false);

					view.setRecord(record);
					view.showBy(button);
				},
				height: '20%',
				id: 'changePicButton',
				left: '0px',
				margin: '5 5 5 5',
				style: 'opacity:0.5;position:absolute',
				top: '-1%',
				ui: 'plain',
				width: '20%',
				iconCls: 'add'
			},
			{
				xtype: 'textfield',
				cls: 'customfield',
				hidden: true,
				id: 'businessName',
				itemId: 'businessName',
				margin: '30 15 2 15',
				styleHtmlContent: true,
				name: 'businessName',
				placeHolder: 'Not Listed'
			},
			{
				xtype: 'textfield',
				cls: [
					'icon-phone',
					'customfield'
				],
				height: '10vh',
				id: 'phoneNumber',
				itemId: 'phoneNumber',
				margin: '0 15 2 15',
				padding: '0 0 5 5',
				styleHtmlContent: true,
				top: '25%',
				width: '95%',
				component: {
					xtype: 'input',
					type: 'tel',
					fastFocus: true
				},
				name: 'phoneNumber',
				maxLength: 12,
				placeHolder: 'Not Listed'
			},
			{
				xtype: 'textareafield',
				cls: [
					'customfield',
					'icon-location'
				],
				id: 'address',
				itemId: 'address',
				margin: '0 15 0 15',
				maxHeight: '15vh',
				minHeight: '10vh',
				padding: '0 0 5 5',
				styleHtmlContent: true,
				top: '60%',
				width: '95%',
				name: 'address',
				required: true,
				placeHolder: 'Not Listed'
			},
			{
				xtype: 'textfield',
				hidden: true,
				id: 'customerId',
				itemId: 'customerId',
				name: 'customerId'
			},
			{
				xtype: 'textfield',
				hidden: true,
				itemId: '',
				name: 'category'
			},
			{
				xtype: 'textfield',
				hidden: true,
				name: 'emailAddress'
			},
			{
				xtype: 'textfield',
				hidden: true,
				name: 'loginEmail'
			},
			{
				xtype: 'textfield',
				hidden: true,
				name: 'city'
			},
			{
				xtype: 'textfield',
				hidden: true,
				name: 'state'
			},
			{
				xtype: 'textfield',
				hidden: true,
				name: 'zipcode'
			},
			{
				xtype: 'textfield',
				hidden: true,
				name: 'pictureURL'
			},
			{
				xtype: 'textfield',
				cls: 'customfield',
				height: '20%',
				hidden: true,
				html: '',
				id: 'website',
				itemId: 'website',
				style: 'font-size:4vw',
				label: '',
				labelAlign: 'top',
				labelWidth: '',
				labelWrap: true,
				name: 'website',
				required: true
			},
			{
				xtype: 'textfield',
				cls: 'customfield',
				height: '20%',
				hidden: true,
				html: '',
				id: 'websiteDisplayName',
				itemId: 'websiteDisplayName',
				style: 'font-size:4vw',
				label: '',
				labelAlign: 'top',
				labelWidth: '',
				labelWrap: true,
				name: 'websiteDisplayName',
				required: true
			},
			{
				xtype: 'container',
				docked: 'bottom',
				height: '40px',
				html: '<p id="terms" style="font-size:2.5vw;" >To change the business name or website info, please <a>Contact Us</a> </p>',
				itemId: 'mycontainer6',
				margin: '5 5 5 10',
				padding: '5 30 5 0',
				styleHtmlContent: true,
				layout: 'hbox',
				listeners: [
					{
						fn: function(element, eOpts) {
							element.addListener('tap',function(){
								//Ext.Viewport.add({xtype:'Terms'}).show();
								var url = "http://www.appsonmobile.com/index.php/contact-us/";
								window.open(url, '_system', 'location=yes');
							});
						},
						event: 'painted'
					}
				]
			},
			{
				xtype: 'component',
				cls: 'contact-name',
				disabled: true,
				docked: 'top',
				height: '40vh',
				id: 'storeImage1',
				itemId: 'storeImage1'
			}
		],
		listeners: [
			{
				fn: 'onPhoneNumberKeyup',
				event: 'keyup',
				delegate: '#phoneNumber'
			}
		]
	},

	onPhoneNumberKeyup: function(textfield, e, eOpts) {
		var len = textfield.getValue().length;
		if(len===3||len===7){
			textfield.setValue(textfield.getValue() + '-');
		}
		 if(len===4){
			  textfield.setValue(textfield.getValue().substr(0,3));
		}
		if(len===8){
			  textfield.setValue(textfield.getValue().substr(0,7));
		}
	},

	getValidationErrors: function() {
		var errors = [];
		        var reqFields = this.query('field[required=true]');
		        var i = 0, ln = reqFields.length, field;
		        for (; i < ln; i++) {
		            field = reqFields[i];
		            if (!field.getValue()) {
		                errors.push(field.getLabel() + ' must be completed.');
		            }
		        }
		        console.dir(errors);
		        return errors;
	},

	setRecord: function(record) {

		this.callParent(arguments);




		if (record) {


			this.down('#businessName').setValue(record.data.businessName);
			this.down('#phoneNumber').setValue(record.data.phoneNumber);
			this.down('#address').setValue(record.data.address);
			//this.child('contactpic').setData(record.data);

		    this.down('#storeImage1').setHtml('<img src = "'+record.get('pictureURL')+'" style="height:40vh;width:95%;margin-left:5px;margin-top:2px;"/>');


		}


	}

});