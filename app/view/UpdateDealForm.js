/*
 * File: app/view/UpdateDealForm.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LocalBuzzMerchantDemo.view.UpdateDealForm', {
	extend: 'Ext.form.Panel',
	alias: 'widget.UpdateDealForm',

	requires: [
		'Ext.field.DatePicker',
		'Ext.picker.Date',
		'Ext.Button',
		'Ext.field.TextArea',
		'Ext.Spacer'
	],

	config: {
		html: '',
		id: 'formpanel1',
		itemId: 'formpanel',
		style: 'background:white',
		ui: 'light',
		autoDestroy: false,
		modal: true,
		scrollable: false,
		multipartDetection: false,
		layout: {
			type: 'vbox',
			align: 'stretchmax'
		},
		items: [
			{
				xtype: 'textfield',
				cls: 'customfield',
				height: '15%',
				hidden: true,
				id: 'businessName1',
				itemId: 'businessName',
				margin: '30 15 2 15',
				styleHtmlContent: true,
				name: 'businessName'
			},
			{
				xtype: 'textfield',
				hidden: true,
				id: 'customerId1',
				itemId: 'customerId',
				name: 'customerId'
			},
			{
				xtype: 'textfield',
				cls: 'customfield',
				disabled: false,
				id: 'DealName',
				itemId: 'DealName',
				margin: '5 5 5 5 ',
				padding: '',
				style: 'border:1px solid #C0C0C0!important:color: #d3d3d3!important',
				styleHtmlContent: true,
				width: '',
				clearIcon: false,
				label: 'Name',
				labelWidth: '35%',
				name: 'DealName',
				readOnly: true
			},
			{
				xtype: 'selectfield',
				cls: 'customfield',
				id: 'DealStatus',
				itemId: 'DealStatus',
				margin: '5 5 5 5 ',
				maxHeight: '',
				style: '',
				styleHtmlContent: true,
				label: 'Status',
				labelWidth: '35%',
				labelWrap: true,
				name: 'DealStatus',
				value: 'Active',
				placeHolder: 'Active',
				autoSelect: false,
				options: [
					{
						text: 'Active',
						value: 'Active'
					},
					{
						text: 'Expired',
						value: 'Expired'
					}
				]
			},
			{
				xtype: 'datepickerfield',
				cls: [
					'customfield',
					'x-field-select'
				],
				id: 'DealStartDate1',
				itemId: 'DealStartDate',
				margin: '5 5 5 5 ',
				width: '97%',
				label: 'Start Date',
				labelWidth: '35%',
				labelWrap: true,
				name: 'DealStartDate',
				value: {
					day: new Date().getDate(),
					month: (new Date().getMonth()+1),
					year: new Date().getFullYear()
				},
				placeHolder: 'mm/dd/yyyy',
				autoSelect: false,
				options: {
					minDate: new Date()
				},
				usePicker: true,
				dateFormat: 'm/d/Y',
				picker: {
					itemId: 'mydatepicker3',
					style: '',
					scrollable: false,
					stretchX: false,
					stretchY: false,
					yearFrom: 2016
				}
			},
			{
				xtype: 'datepickerfield',
				cls: [
					'customfield',
					'x-field-select'
				],
				id: 'DealEndDate1',
				itemId: 'DealEndDate',
				margin: '5 5 5 5 ',
				width: '97%',
				label: 'End Date',
				labelWidth: '35%',
				name: 'DealEndDate',
				value: {
					day: new Date().getDate()+1,
					month: (new Date().getMonth()+1),
					year: new Date().getFullYear()
				},
				placeHolder: 'mm/dd/yyyy',
				usePicker: true,
				picker: {
					styleHtmlContent: true,
					yearFrom: 2016
				}
			},
			{
				xtype: 'textareafield',
				cls: 'customfield',
				height: '100%',
				id: 'DealDescription',
				itemId: 'DealDescription',
				margin: '5 5 5 5 ',
				padding: '',
				style: 'border:1px solid #C0C0C0!important',
				styleHtmlContent: true,
				width: '',
				clearIcon: false,
				label: 'Description',
				labelWidth: '35%',
				name: 'DealDescription'
			},
			{
				xtype: 'textfield',
				cls: 'customfield',
				disabled: false,
				hidden: true,
				id: 'DealImageURL',
				itemId: 'DealImageURL',
				margin: '5 5 5 5 ',
				padding: '',
				style: 'border:1px solid #C0C0C0!important',
				styleHtmlContent: true,
				width: '',
				clearIcon: false,
				labelWidth: '35%',
				name: 'DealImageURL',
				readOnly: true
			},
			{
				xtype: 'textfield',
				hidden: true,
				id: 'itemName',
				itemId: 'itemName',
				name: 'itemName'
			},
			{
				xtype: 'container',
				left: '',
				layout: 'hbox',
				items: [
					{
						xtype: 'container',
						docked: 'left',
						html: '<input type="checkbox" name="chkbx" id="chkbx">',
						left: '40%',
						margin: '5 5 5 15',
						top: '50%'
					},
					{
						xtype: 'container',
						docked: 'right',
						height: '40px',
						html: '<a id="terms" style="font-size:2.5vw;" > I agree to Apps On Mobile LLC\'s Terms & Conditions</a>',
						itemId: 'mycontainer5',
						margin: '5 5 5 10',
						padding: '5 30 5 0',
						styleHtmlContent: true,
						layout: 'hbox',
						listeners: [
							{
								fn: function(element, eOpts) {
									element.addListener('tap',function(){
										//Ext.Viewport.add({xtype:'Terms'}).show();
										var url = "http://www.appsonmobile.com/terms-and-conditions/";
										window.open(url, '_system', 'location=yes');

									});
								},
								event: 'painted'
							}
						]
					}
				]
			},
			{
				xtype: 'container',
				height: 140,
				margin: '10 10 10 10 10',
				styleHtmlContent: true,
				layout: 'fit',
				scrollable: false,
				items: [
					{
						xtype: 'spacer',
						maxWidth: '',
						minWidth: ''
					},
					{
						xtype: 'button',
						handler: function(button, e) {
							Ext.Viewport.getActiveItem().destroy();

						},
						height: '7vh',
						style: 'font-size:5vw!important',
						ui: 'decline',
						width: '40%',
						text: 'Cancel'
					},
					{
						xtype: 'button',
						handler: function(button, e) {

							var form = this.up('UpdateDealForm');


							var itemName = form.getAt(8).getValue();

							var startDate = form.getAt(4).getValue();

							var endDate = form.getAt(5).getValue();

							var dealName = form.getAt(0).getValue();



							var date = new Date();

							console.log(startDate);

							if(dealName){

								if(endDate >= date){
									if(endDate >= startDate){

										if(document.getElementById('chkbx').checked){


											form.submit({
												url: 'http://services.appsonmobile.com/demoDeals/editDeal/'+itemName,
												success: function(form, action) {

													Ext.Msg.alert('Success', action.msg);



													form.destroy();
												},
												failure: function(form,action) {

													store.load();
													Ext.Msg.alert('Oops.....!Something went wrong','Please check your internet connection or try again later',null,null);

													form.destroy();




												}

											});
										}
										else{
											Ext.Msg.alert(null,'You must agree to Terms & Conditions',null,null);
										}
									}
									else
									{
										Ext.Msg.alert('Error!','Buzz start date cannot be after end date',null,null);
									}
								}
								else
								{
									Ext.Msg.alert('Error!','Buzz end date error ',null,null);
								}
							}
							else {
								Ext.Msg.alert('Error!','Buzz name field is empty',null,null);

							}
						},
						docked: 'right',
						height: '7vh',
						itemId: 'submit',
						style: 'font:size:4vw',
						ui: 'confirm',
						width: '30%',
						text: 'Submit'
					}
				]
			}
		]
	},

	getValidationErrors: function() {
		var errors = [];
		        var reqFields = this.query('field[required=true]');
		        var i = 0, ln = reqFields.length, field;
		        for (; i < ln; i++) {
		            field = reqFields[i];
		            if (!field.getValue()) {
		                errors.push(field.getLabel() + ' must be completed.');
		            }
		        }
		        console.dir(errors);
		        return errors;
	},

	setRecord: function(record) {
		this.callParent(arguments);




		if (record) {



			this.down('#DealName').setValue(record.data.dealName);
			this.down('#DealStatus').setValue(record.data.dealStatus);
			this.down('#DealDescription').setValue(record.data.dealDescription);
			this.down('#DealImageURL').setValue(record.data.dealImageURL);
			//this.child('contactpic').setData(record.data);
			//this.down('#DealStartDate').setValue(record.data.dealStartDate);
			//this.down('#DealEndDate').setValue(record.data.dealEndDate);

			var startDate = Ext.Date.parse(record.data.dealStartDate,'n/j/Y');
		    var endDate = Ext.Date.parse(record.data.dealEndDate,'n/j/Y');


			this.down('#DealStartDate').setValue(startDate);
		    this.down('#DealEndDate').setValue(endDate);








		}

	}

});