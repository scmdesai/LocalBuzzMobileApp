/*
 * File: app/controller/LocalBuzzMerchantDemo.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('LocalBuzzMerchantDemo.controller.LocalBuzzMerchantDemo', {
	extend: 'Ext.app.Controller',

	requires: [
		'Ext.MessageBox',
		'Ext.ActionSheet'
	],

	config: {
		stores: [
			'MyJsonPStore',
			'MyDealsStore',
			'UserDetails',
			'LocalStore'
		],

		refs: {
			contactinfo: {
				autoCreate: true,
				selector: 'contactinfo',
				xtype: 'contactinfo'
			},
			contactlist: {
				autoCreate: true,
				selector: 'contactlist',
				xtype: 'contactlist'
			},
			dealsinfo: {
				autoCreate: true,
				selector: 'dealsinfo',
				xtype: 'listofdeals'
			},
			dealpicture: {
				autoCreate: true,
				selector: 'dealpicture',
				xtype: 'dealpicture'
			},
			phoneNumber: 'textfield#phoneNumber',
			address: 'textfield#address',
			editButton: 'button#editButton',
			dealsPanel: 'panel#dealsPanel',
			contactform: {
				autoCreate: true,
				selector: 'contactform',
				xtype: 'contactform'
			},
			formCancelButton: 'button#formCancelButton',
			saveContactButton: 'button#saveContactButton',
			backFromDealsPanelButton: 'button#backFromDealsPanelButton',
			uploadDealBtn: 'button#uploadDealBtn',
			share: 'button#share',
			changePicture: 'button#changePicture',
			manageDeals: 'button#manageDeals',
			panel: 'panel#panel',
			dealBackBtn: 'button#dealBackBtn',
			share: 'button#share',
			buzzometer: 'formpanel#buzzometer'
		},

		control: {
			"contactpic": {
				change: 'onContactPickerChange'
			},
			"list": {
				activate: 'onListActivate'
			},
			"button#dealBackBtn": {
				tap: 'onDealBackBtnTap'
			},
			"listofdeals": {
				itemtap: 'onListOfDealsItemTap'
			},
			"button#editButton": {
				tap: 'onEditButtonTap'
			},
			"button#saveContactButton": {
				tap: 'onSaveContactButtonTap'
			},
			"button#cancelButton": {
				tap: 'onCancelButtonTap'
			},
			"button#BackFromDealsPanel": {
				tap: 'onBackFromDealsPanelTap'
			},
			"button#UploadDeal": {
				tap: 'onUploadDealTap'
			},
			"button#share": {
				tap: 'onShareTap'
			},
			"button#manageDeals": {
				tap: 'onManageDealsTap'
			},
			"formpanel#buzzometer": {
				activate: 'onBuzzometerActivate'
			}
		}
	},

	onContactPickerChange: function(picker, value, eOpts) {
		var currentForm = Ext.Viewport.getActiveItem();
		var record = currentForm.getRecord();
		if (record) {
		    record.set('pictureURL', value);
		    record.commit();
		    currentForm.setRecord(record);
		}

	},

	onListActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
		var ds = Ext.StoreManager.lookup('MyJsonPStore');
		ds.clearFilter();
	},

	onDealBackBtnTap: function(button, e, eOpts) {

		Ext.getStore('LocalStore').removeAt(0);
		Ext.Viewport.getActiveItem().destroy();
	},

	onListOfDealsItemTap: function(dataview, index, target, record, e, eOpts) {
		var recordsToDelete=[];
		var itemNames=[];
		var i=0;







		if (e.target.type === 'button') {

			if(e.target.id === 'delete') {

		   var store = Ext.getStore('MyDealsStore');

		    var record = store.getAt(index);
			var dealName = record.get('dealName');

			Ext.Msg.confirm('Delete '+ dealName +'?',null,
							function(btnText){

							if(btnText==='yes'){
								var itemName = record.get('itemName');





			var req = Ext.Ajax.request({

						method:'POST',


						url  : 'http://services.appsonmobile.com/demoDeals/'+ itemName,

						success: function(form,action){
							Ext.Msg.alert('Success',action.msg);
							//console.log(action.msg);
							var store = Ext.getStore('MyDealsStore');
							store.load();
							var count = store.getCount()-1;
							if(count>=5){
								Ext.getCmp('UploadDeal').disable();

							}
							else {
								Ext.getCmp('UploadDeal').enable();
							}
							dealsStore.load();


						},
						failure: function(form,action) {
							Ext.Msg.alert('Oops.....!Something went wrong','Please check your internet connection or try again later',null,null);
							//console.log(action.msg);
							var store = Ext.getStore('MyDealsStore');
							store.load();
							if(store.getCount()>=5){
								Ext.getCmp('UploadDeal').disable();

							}
							else {
								Ext.getCmp('UploadDeal').enable();
							}

						}









			});



							}

			},this);




		}
			else {

				var store = Ext.getStore('MyDealsStore');

				var record = store.getAt(index);

				var view = Ext.Viewport.add({xtype:'UpdateDealForm'});
				view.setRecord(record);
				Ext.Viewport.setActiveItem(view);

			}
		}

		else{

			Ext.Viewport.add({xtype:'DealsPanel'});





			var store = Ext.getStore('MyDealsStore');




			var record = store.getAt(index);

			Ext.getStore('LocalStore').add(record);

			var view = Ext.Viewport.add({xtype: 'dealPicture'});



			view.setRecord(record);




			Ext.Viewport.setActiveItem(view);






		}




	},

	onEditButtonTap: function(button, e, eOpts) {

		        var form = this.getContactform();
		        var info = this.getContactinfo().getRecord();

		        Ext.Viewport.setActiveItem(form);
		        form.setRecord(info);






	},

	onSaveContactButtonTap: function(button, e, eOpts) {
		//var btn = Ext.get('changePicButton');
		//btn.hide();


		/*var form = this.getContactform();
		var errors = form.getValidationErrors();
		console.log('On Save Button Tap');



		if (errors.length) {
			Ext.Msg.alert('Error', errors.join('<br/>'));
		} else {
			var values = form.getValues();
			var record = form.getRecord();
			//console.log('Record is :' + record.getData());


			//var valueContactPic = form.getAt(2).getValue();
			var valueBusinessName = form.getAt(3).getValue();
			var valuePhoneNumber = form.getAt(4).getValue();
			var valueAddress = form.getAt(5).getValue();
			var valueCategory = form.getAt(7).getValue();
			var valueCustomerId = form.getAt(6).getValue();
			var valueEmailAddress = form.getAt(8).getValue();
			var valueCity = form.getAt(9).getValue();
			var valuePicture = form.getAt(12).getValue();
			var valueState = form.getAt(10).getValue();
			var valueZipcode = form.getAt(11).getValue();




			if (record) {



				record.setData(values);
				record.set('businessName',valueBusinessName);
				record.set('phoneNumber',valuePhoneNumber);
		        record.set('address',valueAddress);


				record.set('category',valueCategory);
				record.set('customerId',valueCustomerId);
		        record.set('emailAddress',valueEmailAddress);

				record.set('picture',valuePicture);
				record.set('city',valueCity);
				record.set('state',valueState);
		        record.set('zipcode',valueZipcode);




				record.commit();

				if (form.referrer.setRecord) {


					form.referrer.setRecord(record);
				}
			} else {
				//Ext.StoreManager.lookup('MyJsonPStore').add(values);
			}
			Ext.Viewport.setActiveItem(form.referrer);
			delete form.referrer;
		}


		*/




	},

	onCancelButtonTap: function(button, e, eOpts) {
		var form = this.getContactform();
		form.destroy();


	},

	onBackFromDealsPanelTap: function(button, e, eOpts) {



		var ds = Ext.StoreManager.lookup('MyJsonPStore');
		ds.clearFilter() ;
		var dealRecord = this.getContactinfo().getRecord() ;
		//console.log("Deal Record is:") ;
		//console.log(dealRecord) ;
		var customerId = dealRecord.get('customerId');
		//console.log("Customer Id is " + customerId) ;
		ds.filter('customerId', customerId);

		var customerData = ds.getData().getAt(0) ;
		//console.log("Customer Data is:") ;
		//console.log(customerData) ;

		var info = this.getContactinfo();
		info.setRecord(customerData);
		ds.clearFilter() ;
		var view = Ext.Viewport.getActiveItem().destroy();
		Ext.Viewport.setActiveItem(info);







	},

	onUploadDealTap: function(button, e, eOpts) {


		var view = Ext.Viewport.add({xtype: 'CreateNewBuzzOption'});
		Ext.Viewport.setActiveItem(view);
		//view.showBy(button);
	},

	onShareTap: function(button, e, eOpts) {
		var record = Ext.getStore('LocalStore').getAt(0);





		//var record = Ext.getStore('MyDealsStore').findRecord('itemName',itemName,0,0,true,false,false);

		//var record = Ext.getStore('MyDealsStore').findRecord('customerId',customerId,0,true,false,false);



		//window.plugins.socialsharing.share(null, null,record.get('dealPictureURL'),null);
		Ext.getCmp('dealBackBtn').hide();
		          Ext.get('share').hide();
		 if (Ext.os.is('Android')) {

		               navigator.screenshot.URI(function(error,res){
		          if(error){
		            console.error(error);
		          }else{
		            //html = '<img style="width:100%;" src="'+res.URI+'">';
		            //document.body.innerHTML = html;
		            window.plugins.socialsharing.share(null,'Hi! Check out the Latest Buzz from LocalBuzz',res.URI,null);

		          }
		        },50);
		               Ext.get('share').show();
		               var view = Ext.Viewport.getComponent('dealPicture');
		               view.setRecord(record);
		               Ext.Viewport.setActiveItem(view);
		           }

		         else {

		           navigator.screenshot.save(function(error,res){
		          if(error){
		            console.error(error);
		          }else
		          {
		              //Ext.Msg.alert(res.filePath,null,null,null); //should be path/to/myScreenshot.jpg
		              window.plugins.socialsharing.share(null,'Hi! Check out the Latest Buzz from LocalBuzz',res.filePath,null);
		             Ext.getCmp('dealBackBtn').show();
		          Ext.get('share').show();
		          }
		        },'jpg',50,'myScreenShot');
				 }
	},

	onManageDealsTap: function(button, e, eOpts) {


		var storeUserDetails = Ext.getStore('UserDetails');
		storeUserDetails.load();
		var customerId;



		storeUserDetails.each(function(record){
			//console.log('StoreUserDetails : ' +record.get('customerId'));
			customerId = record.get('customerId');
		});



		var store = Ext.getStore('MyDealsStore');
		store.load();
		store.clearFilter() ;

		//console.log('Fitering for customerId: ' + customerId);
		store.filter('customerId', customerId);

		var view;

		view =Ext.Viewport.add({xtype: 'DealsPanel'});


		Ext.Viewport.setActiveItem(view);
	},

	onBuzzometerActivate: function(newActiveItem, container, oldActiveItem, eOpts) {
		document.getElementById('buzzometer').submit({

			url :  'http://services.appsonmobile.com/analytics/04',
			method:'GET',
			waitMsg : 'Please Wait...',
		    timeout : 5000,
			success: function(form,action) {
				console.log('Success');

		    },

			failure: function(form,action) {


		      Ext.Msg.alert('Oops.....!Something went wrong','Please check your internet connection or try again later',null,null);

		    }


		});
	}

});