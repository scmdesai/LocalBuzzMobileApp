{
    "type": "Ext.app.Application",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "controllers": [
            "Contacts"
        ],
        "icon": [
            "icon.png"
        ],
        "models": [
            "Contact",
            "Deal",
            "UserDetails",
            "AnalyticsData"
        ],
        "name": "Contact",
        "requires": [
            "Ext.MessageBox",
            "Ext.device.Camera"
        ],
        "startupImage": [
            "icon.png"
        ],
        "stores": [
            "MyJsonPStore",
            "MyDealsStore",
            "UserDetails",
            "LocalStore",
            "AnalyticsStore"
        ],
        "views": [
            "contactform",
            "Picture",
            "DealPicture",
            "ListOfDeals",
            "DealsPanel",
            "Login",
            "UploadDealForm",
            "ChangeContactPicForm",
            "contactinfo",
            "BuzzOMeter",
            "MyPieChart"
        ]
    },
    "name": "Application",
    "designerId": "application",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "",
                    "Ext.util.Format.empty = function(value, defaultValue) {",
                    "\treturn !Ext.isEmpty(value) ? value : defaultValue;",
                    "};",
                    "Ext.util.Format.undef = function(value, defaultValue) {",
                    "\treturn Ext.isDefined(value) ? value : defaultValue;",
                    "};",
                    "",
                    "",
                    "if (Ext.os.is('Android')) {",
                    "\tdocument.addEventListener(\"backbutton\", Ext.bind(onBackKeyDown, this), false);  // add back button listener",
                    "",
                    "\tfunction onBackKeyDown(eve) {",
                    "\t\teve.preventDefault();",
                    "\t\tExt.Msg.confirm(\"Exit\", \"\",  function ( answer ) {",
                    "\t\t\tif ( answer == 'yes') {",
                    "\t\t\t\tnavigator.app.exitApp();",
                    "\t\t\t} else {",
                    "\t\t\t\t//do nothing",
                    "\t\t\t}",
                    "\t\t});",
                    "\t}",
                    "}",
                    "",
                    "//FB login",
                    "// Settings.",
                    "FacebookInAppBrowser.settings.appId = '900651756709444';",
                    "FacebookInAppBrowser.settings.redirectUrl = 'http://appsonmobile.com';",
                    "FacebookInAppBrowser.settings.permissions = 'email';",
                    "",
                    "// Optional",
                    "FacebookInAppBrowser.settings.timeoutDuration = 7500;",
                    "",
                    "// Login(accessToken will be stored trough localStorage in 'accessToken');",
                    "FacebookInAppBrowser.login({",
                    "\tsend: function() {",
                    "\t\tconsole.log('login opened');",
                    "\t},",
                    "\tsuccess: function(access_token) {",
                    "\t\tconsole.log('done, access token: ' + access_token);",
                    "",
                    "\t},",
                    "\tdenied: function() {",
                    "\t\tconsole.log('user denied');",
                    "\t},",
                    "\ttimeout: function(){",
                    "\t\tconsole.log('a timeout has occurred, probably a bad internet connection');",
                    "\t\tExt.msg.alert('Timeout Has Occured','Close Applications running in background and Try Again',null,null);",
                    "\t},",
                    "\tcomplete: function(access_token) {",
                    "\t\tconsole.log('window closed');",
                    "\t\tif(access_token) {",
                    "\t\t\tconsole.log(access_token);",
                    "\t\t} else {",
                    "\t\t\tconsole.log('no access token');",
                    "\t\t}",
                    "\t},",
                    "\tuserInfo: function(userInfo) {",
                    "\t\tif(userInfo) {",
                    "\t\t\tvar userInf = JSON.stringify(userInfo);",
                    "\t\t\tconsole.log(userInf);",
                    "",
                    "\t\t\tvar info = userInf.split(\"\\\",\\\"\");",
                    "",
                    "\t\t\tvar tmp = info[0].split(\"\\\":\\\"\");",
                    "\t\t\tvar email = tmp[1];",
                    "\t\t\t//console.log(email);",
                    "\t\t\ttmp = info[1].split(\"\\\":\\\"\");",
                    "\t\t\tvar loginName = tmp[1];",
                    "",
                    "\t\t\ttmp = info[2].split(\"\\\":\\\"\");",
                    "\t\t\tvar gender = tmp[1];",
                    "",
                    "\t\t\ttmp = info[3].split(\"\\\":\\\"\");",
                    "\t\t\tvar userId = tmp[1];",
                    "",
                    "\t\t\tvar record = Ext.getStore('MyJsonPStore').findRecord('emailAddress','sterling@sterling.com',0,true,false,false);",
                    "\t\t\t//console.log(store.getData());",
                    "\t\t\t//store.loadRecord();",
                    "\t\t\t//var view = Ext.create('Contact.view.Info');",
                    "\t\t\t//view.setRecord(record.getRecord());",
                    "\t\t\t//console.log(view.getData());",
                    "\t\t\t//Ext.Viewport.setActiveItem(view);",
                    "           if(record){",
                    "",
                    "\t\t\tvar storeUserDetails = Ext.getStore('UserDetails');",
                    "\t\t\tstoreUserDetails.removeAll();",
                    "",
                    "\t\t\tstoreUserDetails.add({'customerId' : record.get('customerId'),",
                    "\t\t\t\t\t\t\t\t  'email': email,",
                    "\t\t\t\t\t\t\t\t  'businessName': record.get('businessName')",
                    "\t\t\t\t\t\t\t\t  });",
                    "",
                    "",
                    "",
                    "\t\t\t//console.log(\"User details are : \" + email +','+ record.get('customerId') +','+ record.get('businessName'));",
                    "",
                    "\t\t\tvar store = Ext.getStore('MyJsonPStore');",
                    "\t\t\tvar view = Ext.create(\"Ext.tab.Panel\", {",
                    "\t\t\t\titemId: 'panel' ,",
                    "\t\t\t\tfullscreen: true,",
                    "\t\t\t\ttabBarPosition: 'bottom',",
                    "\t\t\t\tcls: 'toolbarCls',",
                    "\t\t\t\tui:'plain',",
                    "\t\t\t\tstyle:\"font-size:5vw;border-top:1px solid #eee;background:white;color:#00529D\",",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "\t\t\t\titems: [",
                    "\t\t\t\t\t{",
                    "\t\t\t\t\t\txtype: 'contactinfo',",
                    "\t\t\t\t\t\ttitle:'Home',",
                    "\t\t\t\t\t\titemId:'home',",
                    "\t\t\t\t\t\ticonCls:'icon-home',",
                    "",
                    "",
                    "\t\t\t\t\t},",
                    "\t\t\t\t\t{",
                    "\t\t\t\t\t\txtype: 'DealsPanel',",
                    "\t\t\t\t\t\ttitle:'Buzz',",
                    "\t\t\t\t\t\ticonCls:'icon-bubbles'",
                    "\t\t\t\t\t},",
                    "\t\t\t\t\t{",
                    "\t\t\t\t\t\txtype:'buzzometer',",
                    "\t\t\t\t\t\ttitle:'BuzzOMeter',",
                    "\t\t\t\t\t\ticonCls:'info'",
                    "\t\t\t\t\t}",
                    "\t\t\t\t]",
                    "\t\t\t});",
                    "",
                    "",
                    "",
                    "\t\t\tview.getComponent('home').setRecord(record);",
                    "\t\t\t//Ext.Viewport.getActiveItem().destroy();",
                    "\t\t\tExt.Viewport.setActiveItem(view);",
                    "",
                    "\t\t\t//Ext.Viewport.setActiveItem({xtype:'Panel'});",
                    "\t\t\t//console.log(view.getComponent('home').getItemId());",
                    "\t\t\t//view.setData(record.getData());",
                    "\t\t\t////view.setRecord(record);",
                    "\t\t\t// Ext.Viewport.setActiveItem(view);",
                    "\t\t   }",
                    "\t\t\telse{",
                    "\t\t\t\tExt.msg.alert('Timeout Has Occured','Close Applications running in background and Try Again',null,null);",
                    "\t\t\t}",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "\t\t\t//view.setData(record.getData());",
                    "",
                    "\t\t} else {",
                    "\t\t\tconsole.log('no user info');",
                    "\t\t}",
                    "\t}",
                    "});",
                    "",
                    "",
                    ""
                ]
            },
            "name": "launch",
            "designerId": "ba1fcbb2-e63e-445e-a67c-ec117224b08e"
        }
    ]
}